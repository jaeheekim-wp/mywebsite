---
title: "LS 빅데이터 스쿨 HW2"
author : "재희"
date : "2024-07-17"
categories : [bigdata]
jupyter: python3
---

## 데이터분석_HW2
# 144P 

## Q1.배기량 4이하 / 5이상 자동차의 hwy 평균 비교 
```{python}
import pandas as pd
mpg = pd.read_csv("data/mpg.csv")
mpg
mpg_a = mpg.query("displ<=4")
mpg_b = mpg.query("displ>=5")
```

## a평균치
```{python}
mpg_a["hwy"].mean()
```
## b평균치
```{python}
mpg_b["hwy"].mean()

```
## Q2.제조회사에 따른 도시 연비(cty) 차이

```{python}
mpg
mpg_audi = mpg.query("manufacturer == 'audi'")
mpg_toyota = mpg.query("manufacturer == 'toyota'")
```
## audi 연비
```{python}
mpg_audi["cty"].mean()
```
## toyota 연비
```{python}
mpg_toyota["cty"].mean()
```
## "chevrolet' 'ford' 'honda' 자동차의 고속도로 연비 평균 
```{python}
mpg
mpg.query("manufacturer in ['chevrolet','ford','honda']")
mpg_mean = mpg.query("manufacturer in ['chevrolet','ford','honda']")
mpg_mean["hwy"].mean()
```
# 153p

## Q1.audi자동차중 hwy가 1~5위에 해당하는 자동차의 데이터 출력
```{python}
mpg
mpg_audi = mpg.query("manufacturer == 'audi'")
mpg_audi.sort_values("hwy", ascending = False).head()

mpg.query("manufacturer == 'audi'")\
   .sort_values("hwy", ascending = False)\
   .head()
```
# 158p

## Q1.mpg 데이터 복사본과 cty+hwy 합산 연비 변수 
```{python}
import pandas as pd
import numpy as np 
mpg = pd.read_csv("data/mpg.csv")
mpg
mpg_new = mpg.copy()
mpg_new
mpg_new.assign(total = mpg_new["cty"] + mpg_new["hwy"])

```
## Q2.평균 연비 변수 ( 합산 연비 변수 /2 )
```{python}
mpg_new=mpg_new.assign(
        total = mpg_new["cty"] + mpg_new["hwy"],
        mean = (mpg_new["cty"] + mpg_new["hwy"]) / 2
        )

mpg_new.assign(
        total = mpg_new["cty"] + mpg_new["hwy"],
        mean = lambda x : x["total"] / 2
        )
mpg_new        
mpg_new.assign(
        total = lambda x: x["cty"] + x["hwy"],
        mean = lambda x : x["total"] / 2
        )
        
mpg_new
```
## Q3.평균 연비 변수가 가장 높은 자동차 3종 
```{python}

mpg_new.sort_values("mean", ascending = False).head(3)

```
## Q4. 1~3번 문제를 해결할 수 있는 연결된 pandas 구문, 단, mpg 원본 사용 
```{python}
import pandas as pd
import numpy as np 
mpg = pd.read_csv("data/mpg.csv")
mpg

mpg.assign(total = lambda x: x["cty"] + x["hwy"],
           mean = lambda x : x["total"] / 2)\
   .sort_values("mean", ascending = False) \
   .head(3)
```

